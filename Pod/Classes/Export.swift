//
//  Export.swift
//  Pods
//
//  Created by Michael Seemann on 02.10.15.
//
//

import Foundation

public enum ExportError: ErrorType {
    case IllegalArgumentError(String)
}

public enum HealthDataToExportType : String {
    case ALL = "All"
    case ADDED_BY_THIS_APP = "Added by this app"
    case GENERATED_BY_THIS_APP = "Generated by this app"
    
    public static let allValues = [ALL, ADDED_BY_THIS_APP, GENERATED_BY_THIS_APP];
}

public typealias ExportCompletion = (NSError?) -> Void


class ExportOperation: NSOperation {
    
    init(completionBlock: (() -> Void)? ){
        super.init()
        self.completionBlock = completionBlock
    }
    
    override func main() {
        sleep(4)

    }
}

public struct ExportConfiguration {
    public var exportType = HealthDataToExportType.ALL
    public var profilName: String?
    public var ouputStream: NSOutputStream?
    
    public init(){}
}

public class HealthKitDataExporter {
    
    public static let INSTANCE = HealthKitDataExporter()
    
    let exportQueue: NSOperationQueue = {
        var queue = NSOperationQueue()
        queue.name = "export queue"
        queue.maxConcurrentOperationCount = 1
        return queue
    }()
    
    init() { }
    
    public func export(exportConfiguration: ExportConfiguration, onCompletion: ExportCompletion) throws -> Void {
        print(exportConfiguration)
        
        if(exportConfiguration.ouputStream?.streamStatus != .Open){
            throw ExportError.IllegalArgumentError("the outputstream must be open")
        }
        
        let exporter = ExportOperation(completionBlock:{
            onCompletion(nil)
        })
        
        exportQueue.addOperation(exporter)
    }
}
